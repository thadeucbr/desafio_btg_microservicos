services:
  postgres:
    image: postgres
    container_name: database_pg
    restart: always
    env_file:
      - .env
    logging:
      driver: none
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

  consumer_client:
    image: node:alpine
    command: /bin/sh -c "npm install && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./consumer/client:/usr/src/app
    working_dir: /usr/src/app

  consumer_mailer:
    image: node:alpine
    command: /bin/sh -c "npm install && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./consumer/mailer:/usr/src/app
    working_dir: /usr/src/app
    
  consumer_login:
    image: node:alpine
    command: /bin/sh -c "npm install && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./consumer/login:/usr/src/app
    working_dir: /usr/src/app

  consumer_order:
    image: node:alpine
    command: /bin/sh -c "npm install && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./consumer/order:/usr/src/app
    working_dir: /usr/src/app

  consumer_product:
    image: node:alpine
    command: /bin/sh -c "npm install && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./consumer/product:/usr/src/app
    working_dir: /usr/src/app

  api_producer:
    image: node:alpine
    command: /bin/sh -c "npm install && npm run start:dev"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./producer:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 3001:3001

volumes:
  pgdata:
  clientdata:
  logindata:
  orderdata:
  productdata:
  producerdata:
